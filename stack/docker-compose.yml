version: '3.7'

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  web3-batch-exporter:

services:
  web3-batch-service:
    build:
      context: .
      dockerfile: Dockerfile.web3-batch-service
    environment:
      - PROVIDER_URL=${PROVIDER_URL}
      - ETHERSCAN_API_KEY=${ETHERSCAN_API_KEY}
      - PORT=3001
    ports:
      - 3001:3001
    networks:
      - web3-batch-exporter
    restart: always

  web3-batch-exporter:
    build:
      context: .
      dockerfile: Dockerfile.web3-batch-exporter
    environment:
      - WEB3_BATCH_SERVICE_URL=http://web3-batch-service:3001/
      - SERVER_PORT=8000
    ports:
      - 8000:8000
    links:
    #  - alertmanager:alertmanager
      - web3-batch-service:web3-batch-service
    networks:
      - web3-batch-exporter
    restart: always

  prometheus:
    image: prom/prometheus:v2.23.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - web3-batch-exporter:web3-batch-exporter
    networks:
      - web3-batch-exporter
    restart: always

  #alertmanager:
  #  image: prom/alertmanager
  #  ports:
  #    - 9093:9093
  #  volumes:
  #    - ./alertmanager/:/etc/alertmanager/
  #  networks:
  #    - yevents
  #  restart: always
  #  command:
  #    - '--config.file=/etc/alertmanager/config.yml'
  #   - '--storage.path=/alertmanager'

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana

    networks:
      - web3-batch-exporter
    restart: always